{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\web-reactku\\\\src\\\\Test.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hello: \"World!\"\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount()\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount()\");\n  }\n\n  changeState() {\n    this.setState({\n      hello: \"Geek!\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"GeeksForGeeks.org, Hello\", this.state.hello]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.changeState.bind(this),\n          children: \"Press Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 2\n    }, this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate()\");\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log(\"componentWillUpdate()\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate()\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 2\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/react/web-reactku/src/Test.js"],"names":["React","ReactDOM","Test","Component","constructor","props","state","hello","componentWillMount","console","log","componentDidMount","changeState","setState","render","bind","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AACA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACA,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAb;AACC;;AACDC,EAAAA,kBAAkB,GAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACC;;AACDC,EAAAA,iBAAiB,GACjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACC;;AACDE,EAAAA,WAAW,GACX;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAG;AAAV,KAAd;AACC;;AACDO,EAAAA,MAAM,GACN;AACA,wBACA;AAAA,8BACA;AAAA,+CAA8B,KAAKR,KAAL,CAAWC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BACA;AAAG,UAAA,OAAO,EAAE,KAAKK,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOC;;AACDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EACrB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAO,IAAP;AACC;;AACDS,EAAAA,mBAAmB,GACnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACC;;AACDU,EAAAA,kBAAkB,GAClB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACC;;AAxCiC;;AA0CnCT,QAAQ,CAACa,MAAT,eACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADD,EAECO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFD","sourcesContent":["import React from 'react'; \nimport ReactDOM from 'react-dom'; \nclass Test extends React.Component { \n constructor(props) \n { \n super(props); \n this.state = { hello : \"World!\" }; \n } \n componentWillMount() \n { \n console.log(\"componentWillMount()\"); \n } \n componentDidMount() \n { \n console.log(\"componentDidMount()\"); \n } \n changeState() \n { \n this.setState({ hello : \"Geek!\" }); \n } \n render() \n { \n return ( \n <div> \n <h1>GeeksForGeeks.org, Hello{ this.state.hello }</h1> \n <h2> \n <a onClick={this.changeState.bind(this)}>Press Here!</a> \n </h2> \n </div>); \n } \n shouldComponentUpdate(nextProps, nextState) \n { \n console.log(\"shouldComponentUpdate()\"); \n return true; \n } \n componentWillUpdate() \n { \n console.log(\"componentWillUpdate()\"); \n } \n componentDidUpdate() \n { \n console.log(\"componentDidUpdate()\"); \n } \n} \nReactDOM.render( \n <Test />, \n document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}