{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\web-reactku\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport Post from \"../../component/BlogPost/Post\";\nimport './BlogPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // Komponen state dari React untuk Statefull Component\n      listArtikel: [],\n      // Variabel array yang digunakan untuk menyimpan data API\n      insertArtikel: {\n        userId: 1,\n        id: 1,\n        title: \"\",\n        body: \"\"\n      }\n    };\n\n    this.ambilDataDariServerAPI = () => {\n      // Komponen untuk mencetak ketika component telah di-mount-ing, maka panggil API\n      // fetch('https://jsonplaceholder.typicode.com/posts')                                                                                                  // Alamat URL API yang ingin kita ambil datanya\n      // fetch('http://localhost:3020/posts')                     \n      fetch('http://localhost:3001/posts?_sort=id&_order=desc').then(response => response.json()) // Ubah response data dari URL API menjadi sebuah data json\n      .then(jsonHasilAmbilDariAPI => {\n        this.setState({\n          listArtikel: jsonHasilAmbilDariAPI\n        });\n      });\n    };\n\n    this.handleHapusArtikel = data => {\n      fetch(`http://localhost:3001/posts/${data}`, {\n        method: 'DELETE'\n      }) // Alamar URL API yang ingin kita HAPUS datanya\n      .then(res => {\n        // Ketika proses hapus berhasil, maka ambil data dari server API lokal\n        this.ambilDataDariServerAPI();\n      });\n    };\n\n    this.handleTambahArtikel = event => {\n      let formInsertArtikel = { ...this.state.insertArtikel\n      };\n      let timestamp = new Date().getTime();\n      formInsertArtikel['id'] = timestamp;\n      formInsertArtikel[event.target.name] = event.target.value;\n      this.setState({\n        insertArtikel: formInsertArtikel\n      });\n    };\n\n    this.handleTombolSimpan = () => {\n      fetch('http://localhost:3001/posts', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.insertArtikel)\n      }).then(Response => {\n        this.ambilDataDariServerAPI();\n      });\n    };\n  }\n\n  componentDidMount() {\n    // KOmponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\n    this.ambilDataDariServerAPI(); // Ambil data dari server API Lokal\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className=\"post-artikel\">\n      //     <h2>Daftar Artikel</h2>\n      //     {\n      //         this.state.listArtikel.map(artikel => {                                                                                                     // Looping dan masukan untuk setiap data yang ada di listArtikel ke variabel artikel\n      //             return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel}/>  // Mapping data json dari API sesuai dengan kategorinya\n      //         })\n      //     }\n      //     {/* <Post judul=\"JTI Polinema\" isi=\"Jurusan Teknologi Informasi - Politeknik Negeri Malang\"/> */}\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"post-artikel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from pb-2 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              className: \"col-sm-2 col-from-label\",\n              children: \"Judul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-10\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"title\",\n                name: \"title\",\n                onChange: this.handleTambahArtikel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"body\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Isi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-10\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                name: \"body\",\n                id: \"body\",\n                rows: \"3\",\n                onChange: this.handleTambahArtikel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: this.handleTombolSimpan,\n            children: \"Simpan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Daftar Artikel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), this.state.listArtikel.map(artikel => {\n          // Looping dan masukan untuk setiap data yang ada di listArtikel ke variabel artikel\n          return /*#__PURE__*/_jsxDEV(Post, {\n            judul: artikel.title,\n            isi: artikel.body,\n            idArtikel: artikel.id,\n            hapusArtikel: this.handleHapusArtikel\n          }, artikel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this); // Mapping data json dari API sesuai dengan kategorinya\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["C:/react/web-reactku/src/container/BlogPost/BlogPost.jsx"],"names":["React","Component","Post","BlogPost","state","listArtikel","insertArtikel","userId","id","title","body","ambilDataDariServerAPI","fetch","then","response","json","jsonHasilAmbilDariAPI","setState","handleHapusArtikel","data","method","res","handleTambahArtikel","event","formInsertArtikel","timestamp","Date","getTime","target","name","value","handleTombolSimpan","headers","JSON","stringify","Response","componentDidMount","render","map","artikel"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport Post from \"../../component/BlogPost/Post\";\r\nimport './BlogPost.css';\r\n\r\nclass BlogPost extends Component{\r\n    state = {                                                                                                                                                   // Komponen state dari React untuk Statefull Component\r\n        listArtikel:[],                                                                                                                                          // Variabel array yang digunakan untuk menyimpan data API\r\n        insertArtikel: {\r\n            userId: 1,\r\n            id: 1,\r\n            title: \"\",\r\n            body: \"\"\r\n        }\r\n    }\r\n\r\n    // componentDidMount() \r\n    ambilDataDariServerAPI = () => {                                                                                                                                       // Komponen untuk mencetak ketika component telah di-mount-ing, maka panggil API\r\n        // fetch('https://jsonplaceholder.typicode.com/posts')                                                                                                  // Alamat URL API yang ingin kita ambil datanya\r\n        // fetch('http://localhost:3020/posts')                     \r\n        fetch('http://localhost:3001/posts?_sort=id&_order=desc')    \r\n            .then(response => response.json())                                                                                                                  // Ubah response data dari URL API menjadi sebuah data json\r\n            .then(jsonHasilAmbilDariAPI => {\r\n                this.setState({\r\n                    listArtikel: jsonHasilAmbilDariAPI\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {                                                                                                                                       // KOmponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\r\n        this.ambilDataDariServerAPI()                                                                                                                           // Ambil data dari server API Lokal\r\n    }\r\n\r\n    handleHapusArtikel = (data) => {\r\n        fetch(`http://localhost:3001/posts/${data}`,{method: 'DELETE'})                                                                                         // Alamar URL API yang ingin kita HAPUS datanya\r\n            .then(res => {                                                                                                                                      // Ketika proses hapus berhasil, maka ambil data dari server API lokal\r\n                this.ambilDataDariServerAPI()\r\n            })\r\n    }\r\n\r\n    handleTambahArtikel = (event) => {\r\n        let formInsertArtikel = {...this.state.insertArtikel};\r\n        let timestamp = new Date().getTime();\r\n        formInsertArtikel['id'] = timestamp;\r\n        formInsertArtikel[event.target.name] = event.target.value;\r\n        this.setState({\r\n            insertArtikel: formInsertArtikel\r\n        });\r\n    }\r\n\r\n    handleTombolSimpan = () => {\r\n        fetch('http://localhost:3001/posts', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.insertArtikel)\r\n        })\r\n            .then( (Response) => {\r\n                this.ambilDataDariServerAPI();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // <div className=\"post-artikel\">\r\n            //     <h2>Daftar Artikel</h2>\r\n            //     {\r\n            //         this.state.listArtikel.map(artikel => {                                                                                                     // Looping dan masukan untuk setiap data yang ada di listArtikel ke variabel artikel\r\n            //             return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel}/>  // Mapping data json dari API sesuai dengan kategorinya\r\n            //         })\r\n            //     }\r\n            //     {/* <Post judul=\"JTI Polinema\" isi=\"Jurusan Teknologi Informasi - Politeknik Negeri Malang\"/> */}\r\n            // </div>\r\n            <div className=\"post-artikel\">\r\n                <div className=\"from pb-2 border-bottom\">\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-from-label\">Judul</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={this.handleTambahArtikel}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"body\" className=\"col-sm-2 col-form-label\">Isi</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <textarea className=\"form-control\" name=\"body\" id=\"body\" rows=\"3\" onChange={this.handleTambahArtikel}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\r\n                </div>\r\n                <h2>Daftar Artikel</h2>\r\n                {\r\n                     this.state.listArtikel.map(artikel => {                                                                                                     // Looping dan masukan untuk setiap data yang ada di listArtikel ke variabel artikel\r\n                         return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel}/>  // Mapping data json dari API sesuai dengan kategorinya\r\n                     })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}